
public class CellularData {
	
	/**
	 * declares instance variables for country, year, number of rows, number of columns and starting year for use in two dimensional array of each object
	 */
	private String country = "";
	private int year;
	private int startingYear;
	private int numRows;
	private int numColumns;
	
	
	public void createAllCountryVariables(){
		int numCountries = 196;
		int num = 1;
		for(int i = 0; i < numCountries; i++, num++){
			System.out.println("private String country" + num + " =   " + ";");
			
		}
		
		
	}
	
	
	Aruba
	Andorra
	Afghanistan
	Angola
	Albania
	Arab World
	United Arab Emirates
	Argentina
	Armenia
	American Samoa
	Antigua and Barbuda
	Australia
	Austria
	Azerbaijan
	Burundi
	Belgium
	Benin
	Burkina Faso
	Bangladesh
	Bulgaria
	Bahrain
	Bahamas The
	Bosnia and Herzegovina
	Belarus
	Belize
	Bermuda
	Bolivia
	Brazil
	Barbados
	Brunei Darussalam
	Bhutan
	Botswana
	Sub-Saharan Africa
	Central African Republic
	Canada
	East Asia and the Pacific
	Europe and Central Asia
	Switzerland
	Channel Islands
	Chile
	China
	Cote d'Ivoire
	Latin America and the Caribbean
	Middle East and North Africa
	Cameroon
	Congo Rep.
	Colombia
	Comoros
	Cabo Verde
	Costa Rica
	South Asia
	Caribbean small states
	Cuba
	Curacao
	Cayman Islands
	Cyprus
	Czech Republic
	Germany
	Djibouti
	Dominica
	Denmark
	Dominican Republic
	Algeria
	East Asia & Pacific (developing only)
	East Asia & Pacific (all income levels)
	Europe & Central Asia (developing only)
	Europe & Central Asia (all income levels)
	Ecuador
	Egypt Arab Rep.
	Euro area
	Eritrea
	Spain
	Estonia
	Ethiopia
	European Union
	Finland
	Fiji
	France
	Faeroe Islands
	Micronesia Fed. Sts.
	Gabon
	United Kingdom
	Georgia
	Ghana
	Guinea
	Gambia The
	Guinea-Bissau
	Equatorial Guinea
	Greece
	Grenada
	Greenland
	Guatemala
	Guam
	Guyana
	High income
	Hong Kong SAR China
	Honduras
	Heavily indebted poor countries (HIPC)
	Croatia
	Haiti
	Hungary
	Indonesia
	Isle of Man
	India
	Not classified
	Ireland
	Iran Islamic Rep.
	Iraq
	Iceland
	Israel
	Italy
	Jamaica
	Jordan
	Japan
	Kazakhstan
	Kenya
	Kyrgyz Republic
	Cambodia
	Kiribati
	St. Kitts and Nevis
	Korea Rep.
	Kosovo
	Kuwait
	Latin America & Caribbean (developing only)
	Lao PDR
	Lebanon
	Liberia
	Libya
	St. Lucia
	Latin America & Caribbean (all income levels)
	Least developed countries: UN classification
	Low income
	Liechtenstein
	Sri Lanka
	Lower middle income
	Low & middle income
	Lesotho
	Lithuania
	Luxembourg
	Latvia
	Macao SAR China
	St. Martin (French part)
	Morocco
	Monaco
	Moldova
	Madagascar
	Maldives
	Middle East & North Africa (all income levels)
	Mexico
	Marshall Islands
	Middle income
	Macedonia FYR
	Mali
	Malta
	Myanmar
	Middle East & North Africa (developing only)
	Montenegro
	Mongolia
	Northern Mariana Islands
	Mozambique
	Mauritania
	Mauritius
	Malawi
	Malaysia
	North America
	Namibia
	New Caledonia
	Niger
	Nigeria
	Nicaragua
	Netherlands
	High income: nonOECD
	Norway
	Nepal
	New Zealand
	High income: OECD
	OECD members
	Oman
	Other small states
	Pakistan
	Panama
	Peru
	Philippines
	Palau
	Papua New Guinea
	Poland
	Puerto Rico
	Korea Dem. Rep.
	Portugal
	Paraguay
	Pacific island small states
	French Polynesia
	Qatar
	Romania
	Russian Federation
	Rwanda
	South Asia
	Saudi Arabia
	Sudan
	Senegal
	Singapore
	Solomon Islands
	Sierra Leone
	El Salvador
	San Marino
	Somalia
	Serbia
	Sub-Saharan Africa (developing only)
	South Sudan
	Sub-Saharan Africa (all income levels)
	Small states
	Sao Tome and Principe
	Suriname
	Slovak Republic
	Slovenia
	Sweden
	Swaziland
	Sint Maarten (Dutch part)
	Seychelles
	Syrian Arab Republic
	Turks and Caicos Islands
	Chad
	Togo
	Thailand
	Tajikistan
	Turkmenistan
	Timor-Leste
	Tonga
	Trinidad and Tobago
	Tunisia
	Turkey
	Tuvalu
	Tanzania
	Uganda
	Ukraine
	Upper middle income
	Uruguay
	United States
	Uzbekistan
	St. Vincent and the Grenadines
	Venezuela RB
	Virgin Islands (U.S.)
	Vietnam
	Vanuatu
	West Bank and Gaza
	World
	Samoa
	Yemen Rep.
	South Africa
	Congo Dem. Rep.
	Zambia
	Zimbabwe

	
	
	/**
	 * declares and initializes two dimensional array
	 */
	double[][]dataTable;
	
	/**
	 * instantiates number of rows, columns and starting year
	 * @param numRows
	 * @param numColumns
	 * @param startingYear
	 */
	public CellularData(int numRows, int numColumns, int startingYear){
	
		double[][]dataTable = new double[numRows][numColumns];	
	}
	
	public void addCountry(String country, double[] parmArray){
		
		this.dataTable 
		
		
		
	}

	
	
}
